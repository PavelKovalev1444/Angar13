function res = f(x)
  res = cos(x - sin(x));
endfunction

function I = rect(h, nodes)
  summ = 0;
  for i =1:length(nodes)
    summ += f(nodes(i) + h/2);
  endfor  
  I = h*summ;
endfunction

function Int = RungeRect(eps)
  a = 0;
  b = pi();
  iter = 1;
  n = 2;
  h_1 = (b - a)/n;
  nodes_1 = linspace(a, b, n);
  h_2 = 2*(b - a)/n;
  nodes_2 = linspace(a, b, n/2);
  printf("Iter = %d\nn = %d\nintegral = %0.14f\n", iter, n, (rect(h_1, nodes_1) + abs((rect(h_1, nodes_1) - rect(h_2, nodes_2))/3)));
  while(abs((rect(h_1, nodes_1) - rect(h_2, nodes_2))/3) > eps)
    iter++;
    n = n*2;
    h_1 = (b - a)/n;
    nodes_1 = linspace(a, b, n);
    h_2 = 2*(b - a)/n;
    nodes_2 = linspace(a, b, n/2);
    printf("Iter = %d\nn = %d\nintegral = %0.14f\n", iter, n, (rect(h_1, nodes_1) + abs((rect(h_1, nodes_1) - rect(h_2, nodes_2))/3)));
  endwhile
endfunction

function I = trap(h, nodes)
  summ = 0;
  for i =1:length(nodes)-1
    summ += f(nodes(i)) + f(nodes(i+1));
  endfor  
  I = (h/2)*summ;
endfunction

function Int = RungeTrap(eps)
  a = 0;
  b = pi();
  iter = 1;
  n = 4;
  h_1 = (b - a)/n;
  nodes_1 = linspace(a, b, n);
  h_2 = 2*(b - a)/n;
  nodes_2 = linspace(a, b, n/2);
  printf("Iter = %d\nn = %d\nintegral = %0.14f\n", iter, n, (trap(h_1, nodes_1) - abs((trap(h_1, nodes_1) - trap(h_2, nodes_2)))/3));
  while(abs((trap(h_1, nodes_1) - trap(h_2, nodes_2)))/3 > eps)
    iter++;
    n = n*2;
    h_1 = (b - a)/n;
    nodes_1 = linspace(a, b, n);
    h_2 = 2*(b - a)/n;
    nodes_2 = linspace(a, b, n/2);
    printf("Iter = %d\nn = %d\nintegral = %0.14f\n", iter, n, (trap(h_1, nodes_1) - abs((trap(h_1, nodes_1) - trap(h_2, nodes_2))/3)));
  endwhile
endfunction

function I = simps(h, nodes)
  summ = 0;
  for i =1:length(nodes)/2-1
    summ += f(nodes(2*i)) + 4*f(nodes(2*i+1)) + f(nodes(2*i+2));
  endfor  
  I = (h/3)*summ;
endfunction

function Int = RungeSimps(eps)
  a = 0;
  b = pi();
  iter = 1;
  n = 4;
  h_1 = (b - a)/n;
  nodes_1 = linspace(a, b, n);
  h_2 = 2*(b - a)/n;
  nodes_2 = linspace(a, b, n/2);
  printf("Iter = %d\nn = %d\nintegral = %0.14f\n", iter, n, (simps(h_1, nodes_1) - abs((simps(h_1, nodes_1) - simps(h_2, nodes_2)))/3));
  while(abs((simps(h_1, nodes_1) - simps(h_2, nodes_2)))/3 > eps)
    iter++;
    n = n*2;
    h_1 = (b - a)/n;
    nodes_1 = linspace(a, b, n);
    h_2 = 2*(b - a)/n;
    nodes_2 = linspace(a, b, n/2);
    printf("Iter = %d\nn = %d\nintegral = %0.14f\n", iter, n, (simps(h_1, nodes_1) - abs((simps(h_1, nodes_1) - simps(h_2, nodes_2))/3)));
  endwhile
endfunction
