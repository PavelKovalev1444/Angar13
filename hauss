#include <iostream>
#include <cstdlib>
using namespace std;

void printer(double** arr, int n, int m);

void freeMem(double** arr, int n);

void hauss(double** arr, int n, int m);

int main()
{
	int n, m;
	cin >> n >> m;
	if (n < m) {
		cout << "INF";
		return 0;
	}
	double** system = new double* [n];
	for (int i = 0; i < n; i++) {
		system[i] = new double[m + 1];
	}
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m + 1; j++) {
			cin >> system[i][j];
		}
	}
	double* tmp = NULL;
	double* tmp2 = system[0];
	int flag = 0;
	int iter = 0;
	double min = system[0][0];
	for (int i = 0; i < n; i++) {
		if (system[i][0] == 1) {
			tmp = system[i];
			iter = i;
			flag = 1;
			break;
		}
	}

	if ((flag == 1) && (tmp != system[0])) {
		system[0] = tmp;
		system[iter] = tmp2;
	}
	iter = 0;
	if (flag == 0) {
		for (int i = 0; i < n; i++) {
			if (system[i][0] < min && (system[i][0] > 0)) {
				min = system[i][0];
				iter = i;
				tmp = system[iter];
			}
		}
		system[0] = tmp;
		system[iter] = tmp2;
	}
	hauss(system, n, m);
	printer(system, n, m);
	freeMem(system, n);
	return 0;
}

void printer(double** arr, int n, int m) {
	cout << endl;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m + 1; j++) {
			cout << arr[i][j] << " ";
		}
		cout << endl;
	}
}

void freeMem(double** arr, int n) {
	for (int i = 0; i < n; i++) {
		delete [] arr[i];
	}
	delete[] arr;
}

void hauss(double** arr, int n, int m) {
	double delta = 0, epsilon = 0.0000001;
	/*
	for (int e = 0; e < m; e++) {
		for (int i = 1; i < n; i++) {
			delta = arr[i][e] / arr[e][e];
			for (int j = 0; j < m + 1; j++) {
				arr[i][j] = arr[i][j] - delta * arr[0][j];
				if (abs(arr[i][j]) - epsilon < 0) {
					arr[i][j] = 0;
				}
			}
		}
	}
	*/
	for (int e = 0; e < n - 1; e++) {
		delta = arr[e + 1][e] / arr[e][e];
		for (int i = 1 + e; i < n; i++) {
			for (int j = 0; j < m; j++) {
				arr[i][j] = arr[i][j] - delta * arr[e][e];
				if (abs(arr[i][j]) - epsilon < 0) {
					arr[i][j] = 0;
				}
			}
		}
	}
}
